<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


		<bean id="greeting" class="spring.aop.GreetingServiceImpl" p:greeting="안녕"	/>	
		<bean id="logAspect" class="spring.aop.LogAspect"/>
		<bean id="performanceAspect" class="spring.aop.PerformanceAspect"/>	<!-- 빈 생성 -->
		<!-- aop config -->
		<aop:config>
			<aop:pointcut id="publicmethod" expression="execution(public * *(..))"/><!-- public 메소드의 어떤타입의 매개변수든 상관무 : .. -->
			<aop:aspect ref="logAspect">
			<!-- aspect론 LogAspect를 사용해줄거고 -->
				<aop:before pointcut-ref="publicmethod" method="beforeLogging"/>
				<!-- publicmethod의 pointcut이 가리키고있는 execution(* * public(..))요 메소드가 호출됬을때 -->
				<!-- 프록시가 가로채서logaspect안에있는 메소드를 먼저실행시킨다 -->
				<aop:after-returning pointcut-ref="publicmethod" method="afterLogging" returning="returnValue"/>
				
			</aop:aspect>
		</aop:config>
</beans>						
	
	
	
	
	